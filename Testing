-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Globals
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local HRP = LocalPlayer.Character and LocalPlayer.Character:WaitForChild("HumanoidRootPart")

-- GUI Variables
local guiOverlay, loadingBar
local totalPhases, currentPhase = 3, 0

-- Setup
local AUTO_LOOP_DELAY = 0.15
local RANGE = 5
local pitcherCupFilled = false
local interactionEnabled = true

-- Prompt Tags
local cookingTargetNames = {
    ["CookPart"] = true, ["CookingPart"] = true, ["CookingPot"] = true, ["CookingPots"] = true,
    ["Stove"] = true, ["Oven"] = true
}
local specialPromptNames = {
    ["Mix Items"] = true, ["Turn On"] = true, ["Fill Cup"] = true, ["Fill Pitcher Cup"] = true
}

-- GUI
local function createProcessOverlay()
    if not LocalPlayer.Character then LocalPlayer.CharacterAdded:Wait() end
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")

    guiOverlay = Instance.new("ScreenGui", playerGui)
    guiOverlay.Name = "MoneyDupeOverlay"
    guiOverlay.IgnoreGuiInset = true
    guiOverlay.ResetOnSpawn = false
    guiOverlay.ZIndexBehavior = Enum.ZIndexBehavior.Global

    local frame = Instance.new("Frame", guiOverlay)
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(5, 5, 5)
    frame.BackgroundTransparency = 0.1
    frame.BorderSizePixel = 0
    frame.ZIndex = 8

    local topLabel = Instance.new("TextLabel", frame)
    topLabel.Size = UDim2.new(1, 0, 0.08, 0)
    topLabel.Position = UDim2.new(0, 0, 0.02, 0)
    topLabel.Text = "BIGBACK/JFP ;)"
    topLabel.Font = Enum.Font.FredokaOne
    topLabel.TextSize = 30
    topLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    topLabel.BackgroundTransparency = 1
    topLabel.ZIndex = 11

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(1, 0, 0.1, 0)
    label.Position = UDim2.new(0, 0, 0.4, 0)
    label.Text = "Money Dupe Loading. / wash cash after"
    label.Font = Enum.Font.GothamBold
    label.TextSize = 32
    label.TextColor3 = Color3.new(1, 1, 1)
    label.BackgroundTransparency = 1
    label.TextStrokeTransparency = 0.8
    label.ZIndex = 10

    local loadingBarBG = Instance.new("Frame", frame)
    loadingBarBG.Size = UDim2.new(0.6, 0, 0.05, 0)
    loadingBarBG.Position = UDim2.new(0.2, 0, 0.52, 0)
    loadingBarBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    loadingBarBG.BorderSizePixel = 0
    loadingBarBG.ZIndex = 9

    loadingBar = Instance.new("Frame", loadingBarBG)
    loadingBar.Size = UDim2.new(0, 0, 1, 0)
    loadingBar.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    loadingBar.BorderSizePixel = 0
    loadingBar.ZIndex = 10
end

local function advanceProgress()
    currentPhase += 1
    local progress = math.clamp(currentPhase / totalPhases, 0, 1)
    if loadingBar then
        loadingBar:TweenSize(UDim2.new(progress, 0, 1, 0), "Out", "Sine", 0.5, true)
    end
end

local function destroyOverlay()
    if guiOverlay then
        guiOverlay:Destroy()
        guiOverlay = nil
    end
end

-- Utility
local function getRoot()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return character:WaitForChild("HumanoidRootPart")
end

local function isNear(part, range)
    local root = getRoot()
    return part and (part.Position - root.Position).Magnitude <= range
end

local function tryFirePrompt(prompt, tag, callback)
    if not prompt:IsA("ProximityPrompt") or not prompt.Enabled then return end
    for _ = 1, 3 do
        pcall(function()
            fireproximityprompt(prompt, 0)
        end)
    end
    print(">> [" .. (tag or "Prompt") .. "] Fired at:", prompt:GetFullName())

    if tag == "Fill Pitcher Cup" and not pitcherCupFilled then
        pitcherCupFilled = true
        if typeof(callback) == "function" then callback() end
    end
end

local function safeTeleport(cf)
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid.SeatPart then
        humanoid.Sit = false
        task.wait(0.2)
    end
    HRP.CFrame = cf + Vector3.new(0, 3, 0)
end

-- Main Steps
local function step1_buyAndTeleport(callback)
    advanceProgress()
    local backpack = LocalPlayer.Backpack
    local items = { "FreshWater", "Ice-Fruit Bag", "FijiWater", "Ice-Fruit Cupz" }
    for _, name in ipairs(items) do
        if not backpack:FindFirstChild(name) then
            ReplicatedStorage:WaitForChild("ExoticShopRemote"):InvokeServer(name)
            task.wait(0.4)
        end
    end
    task.wait(0.6)
    safeTeleport(CFrame.new(-1040.95618, 253.924194, -1217.70349))
    task.wait(1)
    if typeof(callback) == "function" then callback() end
end

local function step2_automationCook(callback)
    advanceProgress()
    local automationRunning = true

    local function useBackpackItems()
        local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
        if not backpack then return end
        for _, tool in ipairs(backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name ~= "Phone" and tool.Name ~= "Fists" then
                LocalPlayer.Character.Humanoid:EquipTool(tool)
                task.wait(0.15)
            end
        end
    end

    local function scanPrompts()
        for _, obj in ipairs(Workspace:GetDescendants()) do
            if obj:IsA("ProximityPrompt") and obj.Enabled then
                local parent = obj.Parent
                if parent and parent:IsA("BasePart") and isNear(parent, RANGE) then
                    local pName, prName = parent.Name, obj.Name
                    if cookingTargetNames[pName] or specialPromptNames[prName] then
                        tryFirePrompt(obj, prName, callback)
                    end
                end
            end
        end
    end

    task.spawn(function()
        while automationRunning and not pitcherCupFilled do
            pcall(function()
                useBackpackItems()
                scanPrompts()
            end)
            task.wait(AUTO_LOOP_DELAY)
        end
    end)
end

local function step3_duplicate()
    advanceProgress()
    if not pitcherCupFilled then return end

    local sell = Workspace:FindFirstChild("IceFruit Sell")
    if not sell or not sell:FindFirstChild("ProximityPrompt") then return end

    safeTeleport(sell.CFrame)

    local prompt = sell:FindFirstChild("ProximityPrompt")
    for i = 1, 25000 do
        task.spawn(function()
            pcall(function() fireproximityprompt(prompt) end)
        end)
        if i % 1000 == 0 then task.wait(0.01) end
    end

    task.wait(5)
    HRP.CFrame = CFrame.new(-1040.95618, 253.924194, -1217.70349)
    destroyOverlay()
end

-- Message Listener
local function monitorCupFilledMessage()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    local function checkText(obj)
        if not pitcherCupFilled and (obj:IsA("TextLabel") or obj:IsA("TextBox")) and obj.Text then
            if obj.Text:lower():find("cup already filled") then
                pitcherCupFilled = true
                step3_duplicate()
            end
        end
    end

    for _, gui in ipairs(playerGui:GetDescendants()) do
        checkText(gui)
        if gui:IsA("TextLabel") or gui:IsA("TextBox") then
            gui:GetPropertyChangedSignal("Text"):Connect(function()
                checkText(gui)
            end)
        end
    end

    playerGui.DescendantAdded:Connect(function(child)
        checkText(child)
        if child:IsA("TextLabel") or child:IsA("TextBox") then
            child:GetPropertyChangedSignal("Text"):Connect(function()
                checkText(child)
            end)
        end
    end)
end

-- Manual E Key Interaction for PC
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.E and not gameProcessed and interactionEnabled then
        for _, obj in ipairs(Workspace:GetDescendants()) do
            if obj:IsA("ProximityPrompt") and obj.Enabled then
                local parent = obj.Parent
                if parent and parent:IsA("BasePart") and isNear(parent, RANGE) then
                    local pName, prName = parent.Name, obj.Name
                    if cookingTargetNames[pName] or specialPromptNames[prName] then
                        tryFirePrompt(obj, prName)
                    end
                end
            end
        end
    end
end)

-- Start Process
local function startFullProcess()
    pitcherCupFilled = false
    currentPhase = 0
    createProcessOverlay()
    monitorCupFilledMessage()

    step1_buyAndTeleport(function()
        step2_automationCook(function()
            step3_duplicate()
        end)
    end)
end

startFullProcess()
